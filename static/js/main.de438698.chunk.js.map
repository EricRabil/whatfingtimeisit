{"version":3,"sources":["contexts/time.tsx","hooks/useLocalizedTime.ts","const.ts","util.ts","hooks/useBeeperStaff.ts","contexts/people-context.tsx","contexts/color-coding-context.tsx","contexts/localized-time-context.tsx","hooks/useSortedItems.ts","components/hoc/OrderedList.tsx","components/sidebar.tsx","components/views/grid.tsx","App.tsx","components/views/table.tsx","index.tsx"],"names":["TimeContext","createContext","timeToNextSecond","then","Date","setMilliseconds","setSeconds","getSeconds","nextSecond","now","fireEverySecond","cb","timeout","dead","fire","schedule","setTimeout","fireNextSecond","clearTimeout","CurrentTimeOneSecondTTLProvider","children","useState","time","setTime","useEffect","Provider","value","BeeperTimezone","TimeZonesByName","rawTimeZones","reduce","acc","timezone","name","map","zone","sort","BEEPER_TIMEZONE_BINDINGS","NAWest","NACentral","NAMountain","NAEast","Europe","India","MidWest","SouthAmerica","Asia","SEAsia","localizeTime","format","DateTime","TIME_SIMPLE","setZone","localizedAdjustedTime","toLocaleString","timezoneObject","adjustedTime","mapObject","object","mapper","Object","fromEntries","entries","key","getBeeperEmployees","a","fetch","response","json","employees","forEach","employee","console","log","defaultArray","PeopleContext","people","addPerson","removePerson","stored","localStorage","getItem","basePersistentContext","JSON","parse","PersistentPeopleContextProvider","setPeople","staff","useQuery","placeholderData","data","useCallback","person","newPeople","assign","fullPerson","id","Math","random","toString","substring","index","setItem","stringify","changed","ColorCodingContext","colorCodings","colorCodingStyles","autocolor","groupPeopleByTimezone","push","PersistentColorCodingContextProvider","useContext","usePersistent","setColorCodings","useMemo","groups","values","groupCount","keys","length","colors","distinctColors","count","lightMin","lightMax","samples","color","pop","hex","brighten","LocalizedTimeContext","LocalizedPeopleContextProvider","localizedPeople","useSortedItems","items","storageKey","sortOrder","setSortOrder","newSortOrder","obj","b","autoincrement","i1","i2","sortItems","SortableItem","item","Item","useSortable","attributes","listeners","transform","transition","isSorting","setNodeRef","ref","style","undefined","CSS","Translate","OrderedList","onOrderChanged","strategy","verticalListSortingStrategy","activeItemID","setActiveItemID","activeItem","find","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","handleDragEnd","over","active","id1","id2","index1","findIndex","index2","arrayMove","swapItems","handleDragStart","collisionDetection","closestCenter","onDragStart","onDragEnd","PersonRow","forwardRef","abbreviation","props","Consumer","className","data-id","Sidebar","sortedPeople","setSortedPeople","GridPerson","useGridSettings","columns","fontScale","ColumnsToolbarItem","settings","setSettings","setColumns","newSettings","increment","decrement","onClick","FontSizeToolbarItem","setScale","scale","classNames","useSortedPeople","GroupByTimezoneItem","groupPeople","p1","p2","localeCompare","a1","a2","flat","views","component","gridTemplateColumns","attr-font-scale","rectSortingStrategy","toolbarView","ViewToolbarHost","expanded","setExpanded","ToolbarView","path","App","basename","process","to","Component","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.de438698.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nexport const TimeContext = createContext(0);\n\nfunction nextSecond(): number {\n    const then = new Date();\n    then.setMilliseconds(0);\n    then.setSeconds(then.getSeconds() + 1);\n\n    return +then;\n}\n\nfunction timeToNextSecond(): number {\n    return nextSecond() - Date.now();\n}\n\nfunction fireNextSecond(cb: () => void): NodeJS.Timeout {\n    return setTimeout(cb, timeToNextSecond());\n}\n\nfunction fireEverySecond(cb: () => void): () => void {\n    let dead = false;\n    let timeout: NodeJS.Timeout;\n\n    function fire() {\n        if (dead) return;\n        cb();\n        schedule();\n    }\n\n    function kill() {\n        if (dead) return;\n        dead = true;\n        clearTimeout(timeout);\n    }\n\n    function schedule() {\n        if (dead) return;\n        timeout = fireNextSecond(fire);\n    }\n\n    schedule();\n\n    return kill;\n}\n\nexport function CurrentTimeOneSecondTTLProvider({ children }: { children: React.ReactNode }) {\n    const [ time, setTime ] = useState(() => Date.now());\n\n    useEffect(() => fireEverySecond(() => setTime(Date.now())), [setTime]);\n\n    return (\n        <TimeContext.Provider value={time}>\n            {children}\n        </TimeContext.Provider>\n    )\n}","import { TimeContext } from \"@/contexts/time\";\nimport { TimeZoneNames, TimeZonesByName } from \"../const\";\nimport { useContext, useMemo } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { RawTimeZone } from \"@vvo/tzdb\";\n\nexport enum BeeperTimezone {\n    NAWest = \"NA-West\",\n    NACentral = \"NA-Central\",\n    NAMountain = \"NA-Mountain\",\n    NAEast = \"NA-East\",\n    Europe = \"Europe\",\n    India = \"India\",\n    MidWest = \"Mid-West\",\n    SouthAmerica = \"S America\",\n    Asia = \"Asia\",\n    SEAsia = \"SE Asia\",\n}\n\nexport const BEEPER_TIMEZONE_BINDINGS: Record<BeeperTimezone, string> = {\n    [BeeperTimezone.NAWest]: \"America/Los_Angeles\",\n    [BeeperTimezone.NACentral]: \"America/Mexico_City\",\n    [BeeperTimezone.NAMountain]: \"America/Phoenix\",\n    [BeeperTimezone.NAEast]: \"America/New_York\",\n    [BeeperTimezone.Europe]: \"Europe/Zurich\",\n    [BeeperTimezone.India]: \"Asia/Kolkata\",\n    [BeeperTimezone.MidWest]: \"America/New_York\",\n    [BeeperTimezone.SouthAmerica]: \"America/Santiago\",\n    [BeeperTimezone.Asia]: \"Asia/Tokyo\",\n    [BeeperTimezone.SEAsia]: \"Asia/Ho_Chi_Minh\"\n}\n\nexport interface TimeLocalization {\n    localizedAdjustedTime: string;\n    timezoneObject: RawTimeZone;\n    adjustedTime: DateTime;\n}\n\nexport function localizeTime(timezone: string, format = DateTime.TIME_SIMPLE): TimeLocalization {\n    const time = new DateTime().setZone(timezone);\n\n    return {\n        localizedAdjustedTime: time.toLocaleString(format),\n        timezoneObject: TimeZonesByName[timezone],\n        adjustedTime: time\n    };\n}\n\nexport function useAllLocalizedTimes(format = DateTime.TIME_SIMPLE): TimeLocalization[] {\n    const now = useContext(TimeContext);\n\n    return useMemo(() => TimeZoneNames.map(name => localizeTime(name, format)), [now]);\n}\n\nexport default function useLocalizedTime(timezone: string, format = DateTime.TIME_SIMPLE): TimeLocalization {\n    const now = useContext(TimeContext);\n\n    return useMemo(() => localizeTime(timezone, format), [now, timezone, format]);\n}","import { RawTimeZone, rawTimeZones } from \"@vvo/tzdb\";\n\nexport const TimeZonesByName: Record<string, RawTimeZone> = rawTimeZones.reduce((acc, timezone) => {\n    acc[timezone.name] = timezone;\n    return acc;\n}, {} as Record<string, RawTimeZone>);\n\nexport const TimeZoneNames = rawTimeZones.map(zone => zone.name).sort();","import { useMemo } from \"react\";\nimport { BeeperTimezone, BEEPER_TIMEZONE_BINDINGS } from \"./hooks/useLocalizedTime\";\n\nexport function mapObject<Value, NewValue>(object: Record<string, Value>, mapper: (key: string, value: Value) => NewValue): Record<string, NewValue> {\n    return Object.fromEntries(Object.entries(object).map(([ key, value ]) => [key, mapper(key, value)]))\n}\n\nexport function autoincrement(obj: Record<string, number>): number {\n    const [ highest ] = Object.values(obj).sort((a,b) => b - a);\n    return (highest || 0) + 1;\n}\n\nexport function sortItems<T extends { id: string }>(items: Record<string | number | symbol, T>, sortOrder: Record<string, number>): T[] {\n    return Object.values(items).sort((i1, i2) => sortOrder[i1.id] - sortOrder[i2.id]);\n}\n\nexport function useMappedObject<Value, NewValue>(object: Record<string, Value>, mapper: (key: string, value: Value) => NewValue): Record<string, NewValue> {\n    return useMemo(() => mapObject(object, mapper), [object]);\n}\n\nexport interface BeeperEmployee {\n    id: string;\n    timezone: string;\n    name: string;\n}\n\nexport async function getBeeperEmployees(): Promise<BeeperEmployee[]> {\n    const response = await fetch(\"https://us-central1-erics-world.cloudfunctions.net/query-timezones-go\");\n    const employees: BeeperEmployee[] = await response.json();\n\n    employees.forEach(employee => {\n        if (BEEPER_TIMEZONE_BINDINGS[employee.timezone as BeeperTimezone]) employee.timezone = BEEPER_TIMEZONE_BINDINGS[employee.timezone as BeeperTimezone];\n    });\n\n    console.log(employees);\n\n    return employees;\n}","import { BeeperEmployee, getBeeperEmployees } from \"@/util\";\nimport { useQuery } from \"react-query\";\n\nconst defaultArray: BeeperEmployee[] = [];\n\nexport default function useBeeperStaff(): BeeperEmployee[] {\n    const { data } = useQuery(\"staff\", getBeeperEmployees, {\n        placeholderData: defaultArray\n    });\n\n    return data || defaultArray;\n}","import React, { createContext } from \"react\";\nimport useBeeperStaff from \"@/hooks/useBeeperStaff\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nexport interface Person {\n    id: string;\n    name: string;\n    timezone: string;\n}\n\nexport interface PeopleContextShape {\n    people: Record<string, Person>;\n    addPerson(person: Omit<Person, \"sortOrder\" | \"id\">): void;\n    removePerson(index: number): void;\n}\n\nexport const PeopleContext = createContext<PeopleContextShape>({\n    people: {},\n    addPerson: () => undefined,\n    removePerson: () => undefined\n});\n\nconst stored = localStorage.getItem(\"people\");\nconst basePersistentContext: () => Record<string, Person> = () => stored ? JSON.parse(stored) : ({});\n\nfunction nextID(): string {\n    return (Math.random() + 1).toString(36).substring(7);\n}\n\nexport function PersistentPeopleContextProvider({ children }: { children: React.ReactNode }) {\n    const [ people, setPeople ] = useState(basePersistentContext);\n    const staff = useBeeperStaff();\n\n    const addPerson = useCallback((person: Omit<Person, \"sortOrder\">) => {\n        const newPeople = Object.assign({}, people);\n        const fullPerson = Object.assign({}, person, {\n            id: nextID()\n        });\n\n        newPeople[fullPerson.id] = fullPerson;\n        \n        setPeople(newPeople);\n    }, [people]);\n\n    const removePerson = useCallback((index: number) => {\n        const newPeople = Object.assign({}, people);\n        delete newPeople[index];\n\n        setPeople(newPeople);\n    }, [people]);\n\n    useEffect(() => {\n        localStorage.setItem(\"people\", JSON.stringify(people));\n    }, [people]);\n\n    useEffect(() => {\n        const newPeople = Object.assign({}, people);\n        var changed = false;\n\n        for (const employee of staff) {\n            if (!newPeople[employee.id]) {\n                newPeople[employee.id] = employee;\n                changed = true;\n            } else if (newPeople[employee.id].timezone !== employee.timezone) {\n                newPeople[employee.id].timezone = employee.timezone;\n                changed = true;\n            }\n        }\n\n        if (changed) setPeople(newPeople);\n    }, [staff, people]);\n\n    return (\n        <PeopleContext.Provider value={{ people, addPerson, removePerson }}>\n            {children}\n        </PeopleContext.Provider>\n    )\n}","import React, { createContext } from \"react\";\nimport { useContext } from \"react\";\nimport { useCallback } from \"react\";\nimport { usePersistent } from \"react-use-persistent\";\nimport { PeopleContext, Person } from \"./people-context\";\nimport distinctColors from \"distinct-colors\";\nimport { useMemo } from \"react\";\nimport { mapObject } from \"@/util\";\n\nexport const SWATCH_COLORS = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"]\n\nexport interface ColorCodingContextShape {\n    colorCodings: Record<string, [string, string]>;\n    colorCodingStyles: Record<string, any>;\n    autocolor(): void;\n}\n\nexport const ColorCodingContext = createContext<ColorCodingContextShape>({\n    colorCodings: {},\n    colorCodingStyles: {},\n    autocolor: () => undefined,\n});\n\nexport function groupPeopleByTimezone<T extends Person>(people: T[]): Record<string, T[]> {\n    return people.reduce((acc, person) => {\n        (acc[person.timezone] || (acc[person.timezone] = [])).push(person);\n        return acc;\n    }, {} as Record<string, T[]>);\n}\n\nexport function PersistentColorCodingContextProvider({ children }: { children: JSX.Element }) {\n    const { people } = useContext(PeopleContext);\n    const [ colorCodings, setColorCodings ] = usePersistent<Record<string, [string, string]>>(\"color-codings\", {});\n\n    const colorCodingStyles = useMemo(() => mapObject(colorCodings, (id, [background, text]) => ({\n        \"--color-coding-bg\": background,\n        \"--color-coding-text\": text\n    })), [colorCodings]);\n\n    const autocolor = useCallback(() => {\n        const groups = groupPeopleByTimezone(Object.values(people));\n        \n        const groupCount = Object.keys(groups).length;\n\n        const colors = distinctColors({\n            count: groupCount,\n            lightMin: 19,\n            lightMax: 21,\n            samples: 3200\n        }).map(color => ({ color, sort: Math.random() }))\n          .sort(({ sort: sort1 }, { sort: sort2 }) => sort1 - sort2)\n          .map(({ color }) => color);\n\n        const colorCodings: Record<string, [string, string]> = {};\n\n        Object.values(groups).forEach(people => {\n            const color = colors.pop()!;\n\n            for (const person of people) {\n                colorCodings[person.id] = [color.hex(\"rgb\"), color.brighten(4).hex(\"rgb\")];\n            }\n        });\n\n        setColorCodings(colorCodings);\n    }, [people, setColorCodings]);\n\n    return (\n        <ColorCodingContext.Provider value={{ colorCodings, colorCodingStyles, autocolor }}>\n            {children}\n        </ColorCodingContext.Provider>\n    )\n}","import React, { createContext, useContext, useMemo } from \"react\";\nimport { localizeTime, TimeLocalization } from \"../hooks/useLocalizedTime\";\nimport { mapObject } from \"../util\";\nimport { PeopleContext, Person } from \"./people-context\";\nimport { TimeContext } from \"./time\";\n\nexport interface LocalizedPerson extends Person, TimeLocalization {\n}\n\nexport const LocalizedTimeContext = createContext<Record<string, LocalizedPerson>>({});\n\nexport function LocalizedPeopleContextProvider({ children }: { children: React.ReactNode }) {\n    const { people } = useContext(PeopleContext);\n    const now = useContext(TimeContext);\n\n    const localizedPeople: Record<string, LocalizedPerson> = useMemo(() => mapObject(people, (id, person) => {\n        return Object.assign({}, person, localizeTime(person.timezone));\n    }), [people, now,]);\n\n    return (\n        <LocalizedTimeContext.Provider value={localizedPeople}>\n            {children}\n        </LocalizedTimeContext.Provider>\n    )\n}","import { useEffect, useMemo } from \"react\";\nimport { usePersistent } from \"react-use-persistent\";\nimport { autoincrement, sortItems } from \"../util\";\n\nexport function useSortedItems<Item extends { id: string }>(items: Record<string | number | symbol, Item>, storageKey: string): [ Item[], (items: Item[]) => void ] {\n    const [ sortOrder, setSortOrder ] = usePersistent<Record<string, number>>(storageKey, {});\n\n    useEffect(() => {\n        const newSortOrder = Object.assign({}, sortOrder);\n\n        Object.values(items).forEach(({ id }) => {\n            if (typeof newSortOrder[id] === \"undefined\") {\n                newSortOrder[id] = autoincrement(sortOrder);\n            }\n        });\n\n        setSortOrder(newSortOrder);\n    }, [items]);\n\n    const sortedItems = useMemo(() => sortItems(items, sortOrder), [items, sortOrder]);\n\n    return [\n        sortedItems,\n        (items) => setSortOrder(Object.fromEntries(items.map(({ id }, index) => [ id, index ])))\n    ]\n}","import { closestCenter, DndContext, DragEndEvent, DragOverlay, DragStartEvent, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, SortingStrategy, useSortable, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport React, { ReactElement, RefAttributes } from \"react\";\nimport { useMemo } from \"react\";\nimport { useCallback } from \"react\";\nimport { useState } from \"react\";\n\nexport type OrderedListRenderer<T extends { id: string }> = (props: React.PropsWithRef<React.HTMLProps<HTMLDivElement> & { item: T }>) => ReactElement | null;\n\nexport type ExoticOrderedListRenderer<T extends { id: string }, Props extends { item: T } = { item: T }, El = HTMLElement> = React.ForwardRefExoticComponent<Props & RefAttributes<El>>\n\nexport interface OrderedListProps<T extends { id: string }> {\n    items: T[];\n    onOrderChanged?: (items: T[]) => void;\n    children: OrderedListRenderer<T>;\n    strategy?: SortingStrategy;\n}\n\nfunction swapItems<T extends { id: string }>(items: T[], id1: string, id2: string): T[] {\n    const index1 = items.findIndex(item => item.id === id1);\n    const index2 = items.findIndex(item => item.id === id2);\n\n    return arrayMove(items, index1, index2);\n}\n\nfunction SortableItem<T extends { id: string }>({ item, children: Item }: { item: T, children: OrderedListRenderer<T> }) {\n    const {\n        attributes,\n        listeners,\n        transform,\n        transition,\n        isSorting,\n        setNodeRef,\n    } = useSortable({\n        id: item.id\n    })\n\n    return (\n        <Item\n            item={item}\n            ref={setNodeRef}\n            style={{\n                transition: transition || undefined,\n                transform: isSorting ? undefined : CSS.Translate.toString(transform)\n            }}\n            {...attributes}\n            {...listeners}\n        />\n    )\n}\n\nexport default function OrderedList<T extends { id: string }>({ items, onOrderChanged, children: Item, strategy = verticalListSortingStrategy }: OrderedListProps<T>) {\n    const [ activeItemID, setActiveItemID ] = useState<string | null>(null);\n    const activeItem: T | undefined | null = useMemo(() => activeItemID ? items.find(item => item.id === activeItemID) : null, [activeItemID, items]);\n\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates\n        })\n    );\n\n    const handleDragEnd = useCallback(({ over, active }: DragEndEvent) => {\n        if (over && active.id !== over.id && onOrderChanged) {\n            onOrderChanged(swapItems(items, active.id, over.id));\n        }\n\n        setActiveItemID(null);\n    }, [items, onOrderChanged]);\n\n    const handleDragStart = useCallback(({ active }: DragStartEvent) => {\n        setActiveItemID(active.id);\n    }, []);\n\n    return (\n        <DndContext\n            sensors={sensors}\n            collisionDetection={closestCenter}\n            onDragStart={handleDragStart}\n            onDragEnd={handleDragEnd}\n        >\n            <SortableContext items={items} strategy={strategy}>\n                {items.map(item => (\n                    <SortableItem key={item.id} item={item}>\n                        {Item}\n                    </SortableItem>\n                ))}\n            </SortableContext>\n            <DragOverlay>\n                {activeItem ? <Item item={activeItem} /> : null}\n            </DragOverlay>\n        </DndContext>\n    )\n}","import { ColorCodingContext } from \"@/contexts/color-coding-context\";\nimport { LocalizedPerson, LocalizedTimeContext } from \"@/contexts/localized-time-context\";\nimport { useSortedItems } from \"@/hooks/useSortedItems\";\nimport React, { forwardRef, useContext } from \"react\";\nimport OrderedList from \"./hoc/OrderedList\";\n\nconst PersonRow = forwardRef<HTMLDivElement, { item: LocalizedPerson } & React.PropsWithRef<React.HTMLProps<Element>>>(function PersonRow({ item: { id, name, timezoneObject: { abbreviation }, localizedAdjustedTime }, ...props }: { item: LocalizedPerson }, ref) {\n    return (\n        <ColorCodingContext.Consumer>\n            {({ colorCodingStyles }) => (\n                <div className=\"person\" data-id={id} {...props} style={\n                    {...(colorCodingStyles[id] || {}), ...((props as any).style || {})}\n                } ref={ref}>\n                    <span className=\"person-name\">{name}</span>\n                    <span className=\"person-spacer\" />\n                    <span className=\"person-time\">\n                        <span className=\"person-current-time\">\n                            {localizedAdjustedTime}\n                        </span>\n                        <span className=\"pesron-timezone\">\n                            {abbreviation}\n                        </span>\n                    </span>\n                </div>\n            )}\n        </ColorCodingContext.Consumer>\n    )\n})\n\nexport default function Sidebar() {\n    const localizedPeople = useContext(LocalizedTimeContext);\n    const [ sortedPeople, setSortedPeople ] = useSortedItems(localizedPeople, \"sidebar-sort-order\");\n\n    return (\n        <div className=\"sidebar\">\n            <OrderedList items={sortedPeople} onOrderChanged={setSortedPeople}>\n                {PersonRow}\n            </OrderedList>\n        </div>\n    )\n}","import OrderedList, { ExoticOrderedListRenderer } from \"@/components/hoc/OrderedList\";\nimport { ColorCodingContext, groupPeopleByTimezone } from \"@/contexts/color-coding-context\";\nimport { LocalizedPerson, LocalizedTimeContext } from \"@/contexts/localized-time-context\";\nimport { useSortedItems } from \"@/hooks/useSortedItems\";\nimport { rectSortingStrategy } from \"@dnd-kit/sortable\";\nimport classNames from \"classnames\";\nimport React, { forwardRef, useCallback, useContext } from \"react\";\nimport { usePersistent } from \"react-use-persistent\";\n\nconst GridPerson: ExoticOrderedListRenderer<LocalizedPerson, { item: LocalizedPerson }, HTMLDivElement> = forwardRef(function({ item: person, ...props }, ref) {\n    const { colorCodingStyles } = useContext(ColorCodingContext);\n\n    return (\n        <div className=\"grid-person\" {...props} style={{\n            ...colorCodingStyles[person.id], ...((props as any).style || {})\n        } as any} ref={ref}>\n            <span className=\"grid-person-name\">{person.name}</span>\n            <span className=\"grid-person-time\">{person.localizedAdjustedTime}</span>\n        </div>\n    )\n})\n\ninterface GridSettings {\n    columns: number;\n    fontScale: number;\n}\n\nfunction useGridSettings() {\n    return usePersistent<GridSettings>(\"grid-settings\", {\n        columns: 4,\n        fontScale: 3\n    });\n}\n\nfunction ColumnsToolbarItem() {\n    const [ settings, setSettings ] = useGridSettings();\n\n    const columns = settings.columns;\n\n    const setColumns = useCallback((columns: number) => {\n        if (columns > 8 || columns < 1) return;\n\n        const newSettings = Object.assign({}, settings);\n\n        newSettings.columns = columns;\n\n        setSettings(newSettings);\n    }, [settings, setSettings]);\n\n    const increment = useCallback(() => setColumns(columns + 1), [columns, setColumns]);\n    const decrement = useCallback(() => setColumns(columns - 1), [columns, setColumns]);\n\n    return (\n        <div className=\"switcher-group\">\n            <div className=\"switcher-item\" onClick={() => decrement()}>-</div>\n            <div className=\"switcher-label\">{settings.columns} Columns</div>\n            <div className=\"switcher-item\" onClick={() => increment()}>+</div>\n        </div>\n    )\n}\n\nfunction FontSizeToolbarItem() {\n    const [ settings, setSettings ] = useGridSettings();\n\n    const { fontScale } = settings;\n    const scales = [1,2,3,4];\n\n    const setScale = useCallback((fontScale: number) => {\n        setSettings(Object.assign({}, settings, {\n            fontScale\n        }));\n    }, [settings, setSettings]);\n\n    return (\n        <div className=\"switcher-group\">\n            <div className=\"switcher-label\">Font Scale: </div>\n            {scales.map(scale => (\n                <div\n                    className={classNames(\"switcher-item\", { active: fontScale === scale })}\n                    onClick={() => setScale(scale)}\n                    key={scale}\n                >\n                    {scale}x\n                </div>\n            ))}\n        </div>\n    )\n}\n\nfunction useSortedPeople() {\n    const people = useContext(LocalizedTimeContext);\n    \n    return useSortedItems(people, \"grid-sort-order\");\n}\n\nfunction GroupByTimezoneItem() {\n    const [ sortedPeople, setSortedPeople ] = useSortedPeople();\n\n    const groupPeople = useCallback(() => {\n        setSortedPeople(\n            Object.values(groupPeopleByTimezone(sortedPeople))\n                  .map(people => people.sort((p1, p2) => p1.name.localeCompare(p2.name)))\n                  .sort((a1, a2) => a2.length - a1.length)\n                  .flat()\n        );\n    }, [ sortedPeople, setSortedPeople ]);\n    \n    return (\n        <div className=\"switcher-item\" onClick={() => groupPeople()}>\n            Group by Timezone\n        </div>\n    )\n}\n\nexport function GridViewToolbar() {\n    return (\n        <>\n            <FontSizeToolbarItem />\n            <ColumnsToolbarItem />\n            <GroupByTimezoneItem />\n        </>\n    )\n}\n\nexport default function GridView() {\n    const [ sortedPeople, setSortedPeople ] = useSortedPeople();\n    const [ { columns, fontScale } ] = useGridSettings();\n\n    return (\n        <div className=\"grid-view\" style={{\n            gridTemplateColumns: `repeat(${columns}, minmax(0, 1fr))`\n        }} attr-font-scale={fontScale}>\n            <OrderedList items={sortedPeople} onOrderChanged={setSortedPeople} strategy={rectSortingStrategy}>\n                {GridPerson}\n            </OrderedList>\n        </div>\n    )\n}","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport {\n    HashRouter, NavLink as Link, Route, Switch\n} from 'react-router-dom';\nimport Sidebar from \"./components/sidebar\";\nimport GridView, { GridViewToolbar } from \"./components/views/grid\";\nimport TableView from \"./components/views/table\";\nimport { ColorCodingContext } from './contexts/color-coding-context';\nimport \"./scss/style.scss\";\n\ninterface View {\n    name: string;\n    id: string;\n    component: () => React.ReactElement;\n    toolbarView?: () => React.ReactElement;\n}\n\nconst views: View[] = [\n    {\n        name: 'Table View',\n        id: 'table',\n        component: TableView\n    },\n    {\n        name: 'World View',\n        id: 'world',\n        component() {\n            return (\n                <div />\n            )\n        }\n    },\n    {\n        name: 'Grid View',\n        id: 'grid',\n        component: GridView,\n        toolbarView: GridViewToolbar\n    }\n];\n\nfunction ViewToolbarHost() {\n    const [ expanded, setExpanded ] = useState(false);\n\n    return (\n        <Switch>\n            {views.map(({ id, toolbarView: ToolbarView }) => ToolbarView ? (\n                <Route key={id} path={`/view/${id}`}>\n                    {\n                        expanded ? (\n                            <ToolbarView />\n                        ) : null\n                    }\n                    <div className={classNames(\"switcher-item\", { active: expanded })} onClick={() => setExpanded(!expanded)}>Settings</div>\n                </Route>\n            ) : null)}\n        </Switch>\n    )\n}\n\nexport default function App() {\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <>\n                <div className=\"view-switcher\">\n                    {views.map(({ id, name }) => (\n                        <Link key={id} className=\"switcher-item\" to={`/view/${id}`}>{name}</Link>\n                    ))}\n                    <div className=\"switcher-spacer\" />\n                    <ViewToolbarHost />\n                    <ColorCodingContext.Consumer>\n                        {({ autocolor }) => (\n                            <div className=\"switcher-item\" onClick={() => autocolor()}>\n                                Color by Timezone\n                            </div>\n                        )}\n                    </ColorCodingContext.Consumer>\n                    {/* <Link to=\"/people/new\" className=\"switcher-item\">\n                        New Person\n                    </Link> */}\n                </div>\n                <Sidebar />\n                <Switch>\n                    {views.map(({ id, component: Component }) => (\n                        <Route key={id} path={`/view/${id}`}>\n                            <Component />\n                        </Route>\n                    ))}\n                    {/* <Route path=\"/people/new\">\n                        <NewPerson />\n                    </Route> */}\n                </Switch>\n            </>\n        </HashRouter>\n    )\n}","import React from \"react\";\n\nexport default function TableView() {\n    return (\n        <div />\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { PersistentPeopleContextProvider } from './contexts/people-context';\nimport { CurrentTimeOneSecondTTLProvider } from './contexts/time';\nimport { LocalizedPeopleContextProvider } from './contexts/localized-time-context';\nimport { PersistentColorCodingContextProvider } from './contexts/color-coding-context';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <PersistentPeopleContextProvider>\n        <CurrentTimeOneSecondTTLProvider>\n          <LocalizedPeopleContextProvider>\n            <PersistentColorCodingContextProvider>\n                <App />\n            </PersistentColorCodingContextProvider>\n          </LocalizedPeopleContextProvider>\n        </CurrentTimeOneSecondTTLProvider>\n      </PersistentPeopleContextProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}